#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"

#include <Trade\Trade.mqh>

input int fastMA_period = 8;
input int slowMA_period = 200;
input double lotSize = 0.01;

// Define variable for storing the order ticket
int orderTicket;

// Define variable for storing MA values
double fastHandlerMA, slowHandlerMA;

int OnInit(){   
   if(!checkIfParametersValuesAreCorrect()){
      return INIT_PARAMETERS_INCORRECT;
   }      
   fastHandlerMA = iMA(_Symbol, PERIOD_CURRENT, fastMA_period, 0, MODE_EMA, PRICE_CLOSE);
   slowHandlerMA = iMA(_Symbol, PERIOD_CURRENT, slowMA_period, 0, MODE_SMA, PRICE_CLOSE);   
   if(!checkIfHanlersCreationHasSucceed()){
      return INIT_FAILED;
   }   
   return(INIT_SUCCEEDED);
}

void OnDeinit(const int reason){
   if(fastHandlerMA != INVALID_HANDLE)
      IndicatorRelease(fastHandlerMA);
   if(slowHandlerMA != INVALID_HANDLE)
      IndicatorRelease(slowHandlerMA);
}

void OnTick(){}

bool checkIfParametersValuesAreCorrect(){
   bool parametersAreCorrect = true;   
   if(fastMA_period <= 0){
      Alert("Fast moving average period <= 0");
      parametersAreCorrect = false;
   }
   if(slowMA_period <= 0){
      Alert("Slow moving average period <= 0");
      parametersAreCorrect = false;
   }
   if(fastMA_period >= slowMA_period){
      Alert("Fast period >= slow period");
      parametersAreCorrect = false;
   }
   if(lotSize < 0.01){
      Alert("lot size not correct");
      parametersAreCorrect = false;
   }
   return parametersAreCorrect;
}

bool checkIfHanlersCreationHasSucceed(){
   bool creationSucceed = true;    
   if(fastHandlerMA == INVALID_HANDLE){
      Alert("Failed to create fast handler");
      creationSucceed = false;
   }   
   if(slowHandlerMA == INVALID_HANDLE){
      Alert("Failed to create slow handler");
      creationSucceed = false;
   }  
   return creationSucceed;
}
